security:
    encoders:
            App\Entity\User:
                algorithm: auto
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
    #     in_memory: { memory: null }
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        
        login:
            pattern: ^/api/login
            stateless: true
            anonymous: true
            provider: app_user_provider
            json_login:
                check_path: api_login_check
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        api:
            pattern: ^/api
            anonymous: true
            stateless: true
            provider: app_user_provider
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    role_hierarchy:
        ROLE_USER: ROLE_API
        ROLE_ADMIN: ROLE_USER
        ROLE_SUPER_ADMIN: ROLE_ADMIN

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/api/users/login_check, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/users/new, roles: IS_AUTHENTICATED_ANONYMOUSLY, methods: [POST] }
        - { path: ^/api/users, roles: IS_AUTHENTICATED_FULLY, methods: [GET, PUT] }
        - { path: ^/api/shows/next, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/api/followings, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/api/shows, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: /api, roles: IS_AUTHENTICATED_ANONYMOUSLY, ip: 127.0.0.1 }
        - { path: /api, roles: IS_AUTHENTICATED_ANONYMOUSLY, host: localhost }
        - { path: /api, roles: ROLE_ADMIN }
